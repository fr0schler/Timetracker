"""SaaS schema with organizations and multi-tenancy

Revision ID: 002
Revises: 001
Create Date: 2025-09-19 11:00:00.000000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '002'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create organizations table
    op.create_table('organizations',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('slug', sa.String(), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('subscription_tier', sa.Enum('FREE', 'PROFESSIONAL', 'ENTERPRISE', name='subscriptiontier'), nullable=True),
        sa.Column('subscription_expires_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('stripe_customer_id', sa.String(), nullable=True),
        sa.Column('stripe_subscription_id', sa.String(), nullable=True),
        sa.Column('max_users', sa.Integer(), nullable=True),
        sa.Column('max_projects', sa.Integer(), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organizations_id'), 'organizations', ['id'], unique=False)
    op.create_index(op.f('ix_organizations_slug'), 'organizations', ['slug'], unique=True)

    # Create organization_members table
    op.create_table('organization_members',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('organization_id', sa.Integer(), nullable=False),
        sa.Column('role', sa.Enum('OWNER', 'ADMIN', 'MEMBER', name='memberrole'), nullable=True),
        sa.Column('is_active', sa.Boolean(), nullable=True),
        sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
        sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organization_members_id'), 'organization_members', ['id'], unique=False)

    # Add new columns to users table
    op.add_column('users', sa.Column('is_superuser', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('timezone', sa.String(), nullable=True))
    op.add_column('users', sa.Column('keyboard_shortcuts_enabled', sa.Boolean(), nullable=True))
    op.add_column('users', sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True))

    # Add new columns to projects table
    op.add_column('projects', sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('projects', sa.Column('client_name', sa.String(), nullable=True))
    op.add_column('projects', sa.Column('is_billable', sa.Boolean(), nullable=True))
    op.add_column('projects', sa.Column('organization_id', sa.Integer(), nullable=True))

    # Add foreign key constraint for projects.organization_id
    op.create_foreign_key(None, 'projects', 'organizations', ['organization_id'], ['id'])

    # Add new columns to time_entries table
    op.add_column('time_entries', sa.Column('is_billable', sa.Boolean(), nullable=True))
    op.add_column('time_entries', sa.Column('hourly_rate', sa.Numeric(precision=10, scale=2), nullable=True))
    op.add_column('time_entries', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('time_entries', sa.Column('organization_id', sa.Integer(), nullable=True))

    # Add foreign key constraint for time_entries.organization_id
    op.create_foreign_key(None, 'time_entries', 'organizations', ['organization_id'], ['id'])

    # Set default values for existing data
    op.execute("UPDATE users SET is_superuser = false WHERE is_superuser IS NULL")
    op.execute("UPDATE users SET timezone = 'UTC' WHERE timezone IS NULL")
    op.execute("UPDATE users SET keyboard_shortcuts_enabled = true WHERE keyboard_shortcuts_enabled IS NULL")
    op.execute("UPDATE projects SET is_billable = true WHERE is_billable IS NULL")
    op.execute("UPDATE time_entries SET is_billable = true WHERE is_billable IS NULL")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Remove foreign key constraints
    op.drop_constraint(None, 'time_entries', type_='foreignkey')
    op.drop_constraint(None, 'projects', type_='foreignkey')

    # Remove new columns from time_entries
    op.drop_column('time_entries', 'organization_id')
    op.drop_column('time_entries', 'updated_at')
    op.drop_column('time_entries', 'hourly_rate')
    op.drop_column('time_entries', 'is_billable')

    # Remove new columns from projects
    op.drop_column('projects', 'organization_id')
    op.drop_column('projects', 'is_billable')
    op.drop_column('projects', 'client_name')
    op.drop_column('projects', 'hourly_rate')

    # Remove new columns from users
    op.drop_column('users', 'last_login_at')
    op.drop_column('users', 'keyboard_shortcuts_enabled')
    op.drop_column('users', 'timezone')
    op.drop_column('users', 'is_superuser')

    # Drop organization_members table
    op.drop_index(op.f('ix_organization_members_id'), table_name='organization_members')
    op.drop_table('organization_members')

    # Drop organizations table
    op.drop_index(op.f('ix_organizations_slug'), table_name='organizations')
    op.drop_index(op.f('ix_organizations_id'), table_name='organizations')
    op.drop_table('organizations')

    # Drop enums
    sa.Enum(name='memberrole').drop(op.get_bind())
    sa.Enum(name='subscriptiontier').drop(op.get_bind())

    # ### end Alembic commands ###